// @generated by protobuf-ts 2.2.2
// @generated from protobuf file "api_options.proto" (syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message void
 */
export interface void$ {
}
/**
 * @generated from protobuf enum APISourceType
 */
export enum APISourceType {
    /**
     * @generated from protobuf enum value: SOURCE_BOTH = 0;
     */
    SOURCE_BOTH = 0,
    /**
     * @generated from protobuf enum value: SOURCE_SERVER = 1;
     */
    SOURCE_SERVER = 1,
    /**
     * @generated from protobuf enum value: SOURCE_CLIENT = 2;
     */
    SOURCE_CLIENT = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class void$$Type extends MessageType<void$> {
    constructor() {
        super("void", []);
    }
    create(value?: PartialMessage<void$>): void$ {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<void$>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: void$): void$ {
        return target ?? this.create();
    }
    internalBinaryWrite(message: void$, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        const u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message void
 */
export const void$ = new void$$Type();
